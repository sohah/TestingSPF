Daikon version 5.8.4, released July 22, 2020; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

===========================================================================
wbs.WBS:::OBJECT
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == this.Alt_Pressure
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == this.Sys_Mode
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == 0
this.WBS_Node_WBS_BSCU_rlt_PRE1 >= 0
this.WBS_Node_WBS_rlt_PRE2 >= 0
this.Nor_Pressure >= 0
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= this.WBS_Node_WBS_BSCU_rlt_PRE1
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= this.WBS_Node_WBS_rlt_PRE2
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= this.Nor_Pressure
this.WBS_Node_WBS_BSCU_rlt_PRE1 <= this.WBS_Node_WBS_rlt_PRE2
this.WBS_Node_WBS_BSCU_rlt_PRE1 <= this.Nor_Pressure
this.WBS_Node_WBS_rlt_PRE2 >= this.Nor_Pressure
===========================================================================
wbs.WBS.WBS():::EXIT
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == this.WBS_Node_WBS_BSCU_rlt_PRE1
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == this.Nor_Pressure
this.WBS_Node_WBS_rlt_PRE2 == 100
===========================================================================
wbs.WBS.launch(int, boolean, boolean, int, boolean, boolean, int, boolean, boolean, int, boolean, boolean, int, boolean, boolean):::ENTER
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == this.WBS_Node_WBS_BSCU_rlt_PRE1
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == this.Nor_Pressure
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == pedal5
auto5 == skid5
this.WBS_Node_WBS_rlt_PRE2 == 100
pedal1 >= -1
pedal2 >= -1
pedal3 >= -1
pedal4 >= -1
auto5 == true
this.WBS_Node_WBS_rlt_PRE2 > pedal1
this.WBS_Node_WBS_rlt_PRE2 > pedal2
this.WBS_Node_WBS_rlt_PRE2 > pedal3
this.WBS_Node_WBS_rlt_PRE2 > pedal4
===========================================================================
wbs.WBS.launch(int, boolean, boolean, int, boolean, boolean, int, boolean, boolean, int, boolean, boolean, int, boolean, boolean):::EXIT
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE)
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(this.WBS_Node_WBS_BSCU_rlt_PRE1)
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(this.Nor_Pressure)
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(this.Alt_Pressure)
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(this.Sys_Mode)
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(pedal5)
this.WBS_Node_WBS_rlt_PRE2 == this.Nor_Pressure
this.WBS_Node_WBS_BSCU_rlt_PRE1 < \old(this.WBS_Node_WBS_rlt_PRE2)
this.WBS_Node_WBS_rlt_PRE2 < \old(this.WBS_Node_WBS_rlt_PRE2)
===========================================================================
wbs.WBS.update(int, boolean, boolean):::ENTER
PedalPos >= -1
===========================================================================
wbs.WBS.update(int, boolean, boolean):::EXIT
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE)
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(this.Alt_Pressure)
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(this.Sys_Mode)
this.WBS_Node_WBS_rlt_PRE2 == this.Nor_Pressure
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= \old(this.WBS_Node_WBS_BSCU_rlt_PRE1)
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= \old(this.WBS_Node_WBS_rlt_PRE2)
this.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= \old(this.Nor_Pressure)
===========================================================================
wbs.WBS_Daikon:::CLASS
wbs.WBS_Daikon.$assertionsDisabled == false
===========================================================================
wbs.WBS_Daikon.main(java.lang.String[]):::ENTER
args != null
args.getClass().getName() == java.lang.String[].class.getName()
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
daikon.Quant.eltsNotEqual(args, null)
daikon.Quant.pairwiseEqual(daikon.Quant.collectObject(args, "toString()"), new String[] { "/home/soha/git/jpf-symbc/testCase/testCases_wbs.txt" })
daikon.Quant.eltsEqual(daikon.Quant.collectObject(args, "toString()"), "/home/soha/git/jpf-symbc/testCase/testCases_wbs.txt")
daikon.Quant.size(args) == 1
===========================================================================
wbs.WBS_Daikon.main(java.lang.String[]):::EXIT
wbs.WBS_Daikon.$assertionsDisabled == \old(wbs.WBS_Daikon.$assertionsDisabled)
daikon.Quant.pairwiseEqual(args, \old(args))
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
daikon.Quant.eltsNotEqual(args, null)
daikon.Quant.pairwiseEqual(daikon.Quant.collectObject(args, "toString()"), new String[] { "/home/soha/git/jpf-symbc/testCase/testCases_wbs.txt" })
daikon.Quant.eltsEqual(daikon.Quant.collectObject(args, "toString()"), "/home/soha/git/jpf-symbc/testCase/testCases_wbs.txt")
Exiting Daikon.
