Daikon version 5.8.4, released July 22, 2020; http://plse.cs.washington.edu/daikon.
Reading splitter info files (read 1 spinfo file, 4 splitters)
Reading declaration files Processing trace data; reading 1 dtrace file:
wbs.WBS_Output_Instance.update: 4 of 4 splitters successful

Warning: No non-obvious non-suppressed exclusive invariants found in wbs.WBS_Output_Instance.update(int, boolean, boolean):::EXIT
Warning: No non-obvious non-suppressed exclusive invariants found in wbs.WBS_Output_Instance.update(int, boolean, boolean):::EXIT57
===========================================================================
wbs.WBS:::CLASS
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == wbs.WBS.Alt_Pressure
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == wbs.WBS.Sys_Mode
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == 0
wbs.WBS.WBS_Node_WBS_BSCU_rlt_PRE1 == 0 || wbs.WBS.WBS_Node_WBS_BSCU_rlt_PRE1 == 1 || wbs.WBS.WBS_Node_WBS_BSCU_rlt_PRE1 == 2 || wbs.WBS.WBS_Node_WBS_BSCU_rlt_PRE1 == 3 || wbs.WBS.WBS_Node_WBS_BSCU_rlt_PRE1 == 4
wbs.WBS.WBS_Node_WBS_rlt_PRE2 >= 0
wbs.WBS.Nor_Pressure == 0 || wbs.WBS.Nor_Pressure == 1 || wbs.WBS.Nor_Pressure == 2 || wbs.WBS.Nor_Pressure == 3 || wbs.WBS.Nor_Pressure == 5
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= wbs.WBS.WBS_Node_WBS_BSCU_rlt_PRE1
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= wbs.WBS.WBS_Node_WBS_rlt_PRE2
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= wbs.WBS.Nor_Pressure
wbs.WBS.WBS_Node_WBS_BSCU_rlt_PRE1 <= wbs.WBS.WBS_Node_WBS_rlt_PRE2
wbs.WBS.WBS_Node_WBS_BSCU_rlt_PRE1 <= wbs.WBS.Nor_Pressure
wbs.WBS.WBS_Node_WBS_rlt_PRE2 >= wbs.WBS.Nor_Pressure
===========================================================================
wbs.WBS.init():::ENTER
wbs.WBS.WBS_Node_WBS_rlt_PRE2 == wbs.WBS.Nor_Pressure
wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 0 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 1 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 2 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 3 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 5
===========================================================================
wbs.WBS.init():::EXIT
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == wbs.WBS.WBS_Node_WBS_BSCU_rlt_PRE1
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == wbs.WBS.Nor_Pressure
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE)
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(wbs.WBS.Alt_Pressure)
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(wbs.WBS.Sys_Mode)
wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 100
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= \old(wbs.WBS.WBS_Node_WBS_BSCU_rlt_PRE1)
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= \old(wbs.WBS.WBS_Node_WBS_rlt_PRE2)
wbs.WBS.WBS_Node_WBS_rlt_PRE2 > \old(wbs.WBS.WBS_Node_WBS_BSCU_rlt_PRE1)
wbs.WBS.WBS_Node_WBS_rlt_PRE2 > \old(wbs.WBS.WBS_Node_WBS_rlt_PRE2)
===========================================================================
wbs.WBS.launch(int, boolean, boolean, int, boolean, boolean, int, boolean, boolean, int, boolean, boolean, int, boolean, boolean):::ENTER
wbs.WBS.WBS_Node_WBS_rlt_PRE2 == wbs.WBS.Nor_Pressure
wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 0 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 1 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 2 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 3 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 5
pedal1 >= -1
pedal2 >= -1
pedal3 >= -1
pedal4 >= -1
pedal5 >= -1
===========================================================================
wbs.WBS.launch(int, boolean, boolean, int, boolean, boolean, int, boolean, boolean, int, boolean, boolean, int, boolean, boolean):::EXIT
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE)
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(wbs.WBS.Alt_Pressure)
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(wbs.WBS.Sys_Mode)
wbs.WBS.WBS_Node_WBS_rlt_PRE2 == wbs.WBS.Nor_Pressure
wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 0 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 1 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 2 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 3 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 5
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= \old(wbs.WBS.WBS_Node_WBS_BSCU_rlt_PRE1)
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= \old(wbs.WBS.WBS_Node_WBS_rlt_PRE2)
===========================================================================
wbs.WBS.update(int, boolean, boolean):::ENTER
PedalPos >= -1
===========================================================================
wbs.WBS.update(int, boolean, boolean):::EXIT
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE)
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(wbs.WBS.Alt_Pressure)
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE == \old(wbs.WBS.Sys_Mode)
wbs.WBS.WBS_Node_WBS_rlt_PRE2 == wbs.WBS.Nor_Pressure
wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 0 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 1 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 2 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 3 || wbs.WBS.WBS_Node_WBS_rlt_PRE2 == 5
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= \old(wbs.WBS.WBS_Node_WBS_BSCU_rlt_PRE1)
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= \old(wbs.WBS.WBS_Node_WBS_rlt_PRE2)
wbs.WBS.WBS_Node_WBS_BSCU_SystemModeSelCmd_rlt_PRE <= \old(wbs.WBS.Nor_Pressure)
===========================================================================
wbs.WBS_Daikon:::CLASS
wbs.WBS_Daikon.$assertionsDisabled == false
===========================================================================
wbs.WBS_Daikon.main(java.lang.String[]):::ENTER
args != null
args.getClass().getName() == java.lang.String[].class.getName()
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
daikon.Quant.eltsNotEqual(args, null)
daikon.Quant.pairwiseEqual(daikon.Quant.collectObject(args, "toString()"), new String[] { "/home/soha/git/jpf-symbc/testCase/testCases_wbs_steps5.txt" })
daikon.Quant.eltsEqual(daikon.Quant.collectObject(args, "toString()"), "/home/soha/git/jpf-symbc/testCase/testCases_wbs_steps5.txt")
daikon.Quant.size(args) == 1
===========================================================================
wbs.WBS_Daikon.main(java.lang.String[]):::EXIT
wbs.WBS_Daikon.$assertionsDisabled == \old(wbs.WBS_Daikon.$assertionsDisabled)
daikon.Quant.pairwiseEqual(args, \old(args))
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
daikon.Quant.eltsNotEqual(args, null)
daikon.Quant.pairwiseEqual(daikon.Quant.collectObject(args, "toString()"), new String[] { "/home/soha/git/jpf-symbc/testCase/testCases_wbs_steps5.txt" })
daikon.Quant.eltsEqual(daikon.Quant.collectObject(args, "toString()"), "/home/soha/git/jpf-symbc/testCase/testCases_wbs_steps5.txt")
===========================================================================
wbs.WBS_Output_Instance:::OBJECT
this.NormalPressure_r == this.AltPressure_r
this.NormalPressure_r == this.Sys_Mode
this.NormalPressure_r == 0
===========================================================================
wbs.WBS_Output_Instance.WBS_Output_Instance():::EXIT
===========================================================================
wbs.WBS_Output_Instance.update(int, boolean, boolean):::ENTER
pedal_r >= -1
===========================================================================
wbs.WBS_Output_Instance.update(int, boolean, boolean):::EXIT
\result.AltPressure_r == \result.Sys_Mode
(\old(pedal_r) >= -1) || !(\old(pedal_r) <= 4)
(\result.NormalPressure_r == 0 || \result.NormalPressure_r == 1 || \result.NormalPressure_r == 2 || \result.NormalPressure_r == 3 || \result.NormalPressure_r == 5) || !(\old(pedal_r) <= 4)
(\result.AltPressure_r < \old(pedal_r)) || !(\old(pedal_r) == 5)
(\result.NormalPressure_r < \old(pedal_r)) || !(\old(pedal_r) == 5)
(\result.NormalPressure_r == 0 || \result.NormalPressure_r == 1) || !(\old(pedal_r) == 5)
(\result.AltPressure_r >= \old(pedal_r)) == (\old(pedal_r) == -1 || \old(pedal_r) == 0)
(\result.NormalPressure_r >= \old(pedal_r)) || !(\old(pedal_r) == -1 || \old(pedal_r) == 0)
(\result.NormalPressure_r == 0 || \result.NormalPressure_r == 1) || !(\old(pedal_r) == -1 || \old(pedal_r) == 0)
(\result.AltPressure_r < \old(pedal_r)) == (\old(pedal_r) == 1 || \old(pedal_r) == 2 || \old(pedal_r) == 3 || \old(pedal_r) == 4 || \old(pedal_r) == 5)
(\result.NormalPressure_r == 0 || \result.NormalPressure_r == 1 || \result.NormalPressure_r == 2 || \result.NormalPressure_r == 3 || \result.NormalPressure_r == 5) || !(\old(pedal_r) == 1 || \old(pedal_r) == 2 || \old(pedal_r) == 3 || \old(pedal_r) == 4 || \old(pedal_r) == 5)
(\result.NormalPressure_r == 0 || \result.NormalPressure_r == 1 || \result.NormalPressure_r == 2 || \result.NormalPressure_r == 3 || \result.NormalPressure_r == 5) || !(\old(skid_r) == false)
(\result.NormalPressure_r == 0) || !(\old(skid_r) == true)
(\result.NormalPressure_r == \result.AltPressure_r) || !(\old(skid_r) == true)
\result != null
\result.NormalPressure_r == 0 || \result.NormalPressure_r == 1 || \result.NormalPressure_r == 2 || \result.NormalPressure_r == 3 || \result.NormalPressure_r == 5
\result.AltPressure_r == 0
\result.NormalPressure_r >= \result.AltPressure_r
Exiting Daikon.
